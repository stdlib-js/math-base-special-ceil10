{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isInfinite = require( '@stdlib/math-base-assert-is-infinite' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar ceil = require( '@stdlib/math-base-special-ceil' );\nvar log10 = require( '@stdlib/math-base-special-log10' );\nvar MAX_EXP = require( '@stdlib/constants-float64-max-base10-exponent' );\nvar MIN_EXP_SUBNORMAL = require( '@stdlib/constants-float64-min-base10-exponent-subnormal' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Rounds a numeric value to the nearest power of `10` toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil10( 3.141592653589793 );\n* // returns 10.0\n*\n* @example\n* var v = ceil10( 9.0 );\n* // returns 10.0\n*\n* @example\n* var v = ceil10( -0.314 );\n* // returns -0.1\n*/\nfunction ceil10( x ) {\n\tvar sign;\n\tvar p;\n\tif (\n\t\tisnan( x ) ||\n\t\tisInfinite( x ) ||\n\t\tx === 0.0\n\t) {\n\t\treturn x;\n\t}\n\tif ( x < 0 ) {\n\t\tx = -x;\n\t\tsign = -1.0;\n\t} else {\n\t\tsign = 1.0;\n\t}\n\t// Solve the equation `10^p = x` for `p`:\n\tp = log10( x );\n\n\t// Determine a power of 10 which rounds the input value toward positive infinity:\n\tif ( sign === -1.0 ) {\n\t\tp = floor( p );\n\t} else {\n\t\tp = ceil( p );\n\t}\n\t// Handle underflow:\n\tif ( p <= MIN_EXP_SUBNORMAL ) {\n\t\treturn sign * 0.0; // sign-preserving\n\t}\n\t// Handle overflow:\n\tif ( p > MAX_EXP ) {\n\t\treturn PINF;\n\t}\n\treturn sign * pow( 10.0, p );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ceil10;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a numeric value to the nearest power of `10` toward positive infinity.\n*\n* @module @stdlib/math-base-special-ceil10\n*\n* @example\n* var ceil10 = require( '@stdlib/math-base-special-ceil10' );\n*\n* var v = ceil10( 3.141592653589793 );\n* // returns 10.0\n*\n* v = ceil10( 9.0 );\n* // returns 10.0\n*\n* v = ceil10( -0.314 );\n* // returns -0.1\n*/\n\n// MODULES //\n\nvar ceil10 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ceil10;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAa,QAAS,sCAAuC,EAC7DC,EAAM,QAAS,+BAAgC,EAC/CC,EAAQ,QAAS,iCAAkC,EACnDC,EAAO,QAAS,gCAAiC,EACjDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAU,QAAS,+CAAgD,EACnEC,EAAoB,QAAS,yDAA0D,EACvFC,EAAO,QAAS,gCAAiC,EAuBrD,SAASC,EAAQC,EAAI,CACpB,IAAIC,EACAC,EACJ,OACCZ,EAAOU,CAAE,GACTT,EAAYS,CAAE,GACdA,IAAM,EAECA,GAEHA,EAAI,GACRA,EAAI,CAACA,EACLC,EAAO,IAEPA,EAAO,EAGRC,EAAIP,EAAOK,CAAE,EAGRC,IAAS,GACbC,EAAIT,EAAOS,CAAE,EAEbA,EAAIR,EAAMQ,CAAE,EAGRA,GAAKL,EACFI,EAAO,EAGVC,EAAIN,EACDE,EAEDG,EAAOT,EAAK,GAAMU,CAAE,EAC5B,CAKAb,EAAO,QAAUU,ICpDjB,IAAII,EAAS,IAKb,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "isInfinite", "pow", "floor", "ceil", "log10", "MAX_EXP", "MIN_EXP_SUBNORMAL", "PINF", "ceil10", "x", "sign", "p", "ceil10"]
}
